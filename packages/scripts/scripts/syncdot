#!/bin/sh 
 
set -e 

GIT_CLONE_PATH=~/projects/github.com/JunichiSugiura
STOW_PACKAGES_PATH="$GIT_CLONE_PATH"/dotfiles/packages
 
echo 'Change default shell to zsh'
if [ "$(dscl . -read ~/ UserShell)" = "UserShell: /bin/bash" ]; then 
    chsh -s /bin/zsh
    chmod -R 755 /usr/local/share/zsh
    chown -R root:staff zsh
fi 

echo 'Setup Homebrew'
if [ ! -f /usr/local/bin/brew ]; then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

echo 'Setup node'
if [ ! -d ~/.nvm ]; then
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash

    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion" 
    nvm install node
    nvm use node
fi

echo 'Clone dotfiles'
if [ ! -d "$GIT_CLONE_PATH" ]; then
    mkdir -p "$GIT_CLONE_PATH"
fi

if [ ! -d "$GIT_CLONE_PATH"/dotfiles ]; then
    cd "$GIT_CLONE_PATH"
    git clone git@github.com:JunichiSugiura/dotfiles.git
fi

echo 'Setup apps and CLIs'
brew bundle -v --file "$GIT_CLONE_PATH"/dotfiles/Brewfile

# https://github.com/mas-cli/mas/issues/164
# HOMEBREW_BUNDLE_MAS_SKIP=$(brew bundle list --mas) brew bundle
# mas signin jun.sugiura.jp+jp@gmail.com
# HOMEBREW_BUNDLE_TAP_SKIP=$(brew bundle list --taps) \
# 	HOMEBREW_BUNDLE_BREW_SKIP=$(brew bundle list --brews) \
# 	HOMEBREW_BUNDLE_CASK_SKIP=$(brew bundle list --casks) \
# 	brew bundle

echo 'Setup config files'
if [ ! -d ~/.config ]; then
    mkdir ~/.config/
fi

if [ ! -d ~/.config/alacritty ]; then
    mkdir ~/.config/alacritty
fi

if [ ! -d ~/.config/lf ]; then
    mkdir ~/.config/lf
fi

if [ ! -d ~/.config/starship ]; then
    mkdir ~/.config/starship
fi

if [ ! -d ~/.config/yarn ]; then
    mkdir -p ~/.config/yarn/global
fi

stow -v -d "$STOW_PACKAGES_PATH" -t ~ $(ls -m "$STOW_PACKAGES_PATH" | tr ',' ' ')

# enable key-repeating with vim bindings
defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false

echo 'Setup gpg signing with git'
if [ ! -d ~/.gnupg ] || [ -z "$(gpg --list-secret-keys --keyid-format LONG)" ]; then
    gpg --default-new-key-algo rsa4096 --gen-key
    key_id=$(gpg --list-secret-keys --keyid-format LONG | ggrep -oP "rsa4096\/[0-9a-fA-F]{16}" | cut -d"/"  -f2)
    echo 'Copy and pates the GPG key below to GitHub'
    gpg --armor --export "$key_id"
    git config --global user.signingkey "$key_id"
fi

if [ ! -f ~/.ssh/id_rsa.pub ]; then
    ssh-keygen -t rsa -b 4096 -C "jun.sugiura.jp@gmail.com"
    echo 'Copy and pates the SSH key below to GitHub'
    cat ~/.ssh/id_rsa.pub
fi

echo 'Setup Ruby'
RUBY_VERSION=2.7.1
if [ "$(which ruby)" = /usr/bin/ruby ]; then
    rbenv install -s "$RUBY_VERSION"
    rbenv global "$RUBY_VERSION"
    ~/.rbenv/shims/gem install bundler
fi

echo 'Setup Rust'
if [ ! -d ~/.cargo ]; then
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    rustup toolchain install nightly
fi

echo 'Setup Yarn global'
if [ ! -d ~/.config/yarn/global/node_modules ]; then
    yarn global add
fi

echo 'Setup hunter'
if [ ! -f ~/.cargo/bin/hunter ]; then
    if [ ! -d ~/projects/github.com/rabite0/hunter ]; then
        mkdir -p ~/projects/github.com/rabite0
        cd ~/projects/github.com/rabite0
        git clone https://github.com/rabite0/hunter.git
    fi

    cd ~/projects/github.com/rabite0/hunter
    git checkout tags/v1.3.5
    rustup override set nightly
    cargo install --no-default-features --path .
fi

echo 'Setup amethyst tools'
if [ ! -f ~/.cargo/bin/amethyst ]; then
    cargo install amethyst_tools
fi
