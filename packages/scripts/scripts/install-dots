#!/bin/sh 
 
set -e 

GIT_CLONE_PATH=~/projects/github.com/JunichiSugiura
STOW_PACKAGES_PATH="$GIT_CLONE_PATH"/dotfiles/packages

for i in "$@"; do
    case "$i" in
        -s|--skip-apps)
            skip_apps=1
            shift ;;
        *) ;;
    esac
done

log() {
    message=$1
    echo ðŸ“Œ "$message"
}

is_file() {
    path="$1"
    if [ -d path ]; then
        return 1
    else
        return 0
    fi
}

is_dir() {
    path="$1"
    if [ -d path ]; then
        return 1
    else
        return 0
    fi
}

ensure_dir() {
    path="$1"
    if ! is_dir "$path"; then
        mkdir -p "$path"
    fi
}
 
if [ "$(dscl . -read ~/ UserShell)" = "UserShell: /bin/bash" ]; then 
    log 'Change default shell to zsh'
    chsh -s /bin/zsh
    chmod -R 755 /usr/local/share/zsh
    chown -R root:staff zsh
fi 

if ! is_file /usr/local/bin/brew; then
    log 'Setup Homebrew'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

ensure_dir "$GIT_CLONE_PATH"

if ! is_dir "$GIT_CLONE_PATH"/dotfiles; then
    log 'Clone dotfiles'
    cd "$GIT_CLONE_PATH"
    git clone git@github.com:JunichiSugiura/dotfiles.git
fi

if [ ! "$skip_apps" ]; then
    log 'Install Apps and CLIs'
    brew bundle --file "$GIT_CLONE_PATH"/dotfiles/Brewfile
fi

log 'Link dotfiles'
ensure_dir ~/.config/alacritty
ensure_dir ~/.config/starship
ensure_dir ~/.config/yarn/global

# shellcheck disable=SC2046
stow -d "$STOW_PACKAGES_PATH" -t ~ $(ls packages)

# enable key-repeating with vim bindings
defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false

if ! is_dir ~/.gnupg || [ -z "$(gpg --list-secret-keys --keyid-format LONG)" ]; then
    log 'Install gpg signing with git'
    gpg --default-new-key-algo rsa4096 --gen-key
    key_id=$(gpg --list-secret-keys --keyid-format LONG | ggrep -oP "rsa4096\/[0-9a-fA-F]{16}" | cut -d"/"  -f2)
    log 'Copy and pates the GPG key below to GitHub'
    gpg --armor --export "$key_id"
    git config --global user.signingkey "$key_id"
fi

if ! is_file ~/.ssh/id_rsa.pub; then
    log 'Setup gpg signing for git'
    ssh-keygen -t rsa -b 4096 -C "jun.sugiura.jp@gmail.com"
    log 'Copy and pates the SSH key below to GitHub'
    cat ~/.ssh/id_rsa.pub
fi

log 'Setup Lang Runtimes'
# shellcheck disable=SC2013
for plugin in $(awk '{print $1}' ~/.tool-versions); do
    if ! is_dir ~/.asdf/plugins/"$plugin"; then
        asdf plugin add "$plugin"
    fi
done

is_asdf_version_changed() {
    plugin="$1"
    installed=$(asdf list "$plugin" | awk '{gsub(/^ +| +$/,""); print $0}')
    specified=$(grep "$plugin" ~/.tool-versions | awk '{$1=""; gsub(/^ +| +$/,""); print $0}')

    if [ "$installed" = "$specified" ]; then
        return 1
    else
        return 0
    fi
}

# import release team keyring if nodejs versions changed
# more info -> https://github.com/asdf-vm/asdf-nodejs#install
if is_asdf_version_changed nodejs; then
    log 'Import release team keyring for Node.JS'
    bash -c '${ASDF_DATA_DIR:=$HOME/.asdf}/plugins/nodejs/bin/import-release-team-keyring'
fi

asdf install

if ! is_dir ~/.config/yarn/global/node_modules; then
    log 'Setup Yarn global'
    yarn global add
fi

if ! is_dir /Library/ScriptingAdditions/yabai.osax; then
    log 'Setup yabai'
    sudo yabai --install-sa
fi
