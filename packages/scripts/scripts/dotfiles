#!/bin/sh 
 
set -e 

GIT_CLONE_PATH=~/projects/github.com/JunichiSugiura
STOW_PACKAGES_PATH="$GIT_CLONE_PATH"/dotfiles/packages

unlink_packages=
for i in "$@"; do
    case "$i" in
        -s|--skip-apps)
            skip_apps=1
            shift ;;
        -u=*|--unlink=*)
            unlink_packages="${i#*=}"
            shift ;;
        *) ;;
    esac
done

log() {
    message=$1
    echo ðŸ“Œ "$message"
}

is_file() {
    path="$1"
    [ -f "$path" ]
}

is_dir() {
    path="$1"
    [ -d "$path" ]
}

ensure_dir() {
    path="$1"
    if ! is_dir "$path"; then
        mkdir -p "$path"
    fi
}

if [ -n "$unlink_packages" ]; then
    log 'Unlinking dotfiles...'
    stow -vD -d "$STOW_PACKAGES_PATH" -t ~ "$unlink_packages"
    exit
fi
 
if [ "$(dscl . -read ~/ UserShell)" = "UserShell: /bin/bash" ]; then 
    log 'Change default shell to zsh'
    chsh -s /bin/zsh
    chmod -R 755 /usr/local/share/zsh
    chown -R root:staff zsh
fi 

if ! is_file /usr/local/bin/brew; then
    log 'Setup Homebrew'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
fi

ensure_dir "$GIT_CLONE_PATH"

if ! is_dir "$GIT_CLONE_PATH"/dotfiles; then
    log 'Clone dotfiles'
    cd "$GIT_CLONE_PATH"
    git clone git@github.com:JunichiSugiura/dotfiles.git
fi

if [ ! "$skip_apps" ]; then
    log 'Install Apps and CLIs'
    brew bundle --file "$GIT_CLONE_PATH"/dotfiles/Brewfile
fi

log 'Link dotfiles'
ensure_dir ~/.config/alacritty
ensure_dir ~/.config/starship
ensure_dir ~/.config/yarn/global

# shellcheck disable=SC2046
stow -vd "$STOW_PACKAGES_PATH" -t ~ $(ls $STOW_PACKAGES_PATH)

# enable key-repeating with vim bindings
defaults write com.microsoft.VSCodeInsiders ApplePressAndHoldEnabled -bool false

if ! is_dir ~/.gnupg || [ -z "$(gpg --list-secret-keys --keyid-format LONG)" ]; then
    log 'Install gpg signing with git'
    gpg --default-new-key-algo rsa4096 --gen-key
    key_id=$(gpg --list-secret-keys --keyid-format LONG | ggrep -oP "rsa4096\/[0-9a-fA-F]{16}" | cut -d"/"  -f2)
    log 'Copy and pates the GPG key below to GitHub'
    gpg --armor --export "$key_id"
    git config --global user.signingkey "$key_id"
fi

if ! is_file ~/.ssh/id_rsa.pub; then
    log 'Setup gpg signing for git'
    ssh-keygen -t rsa -b 4096 -C "jun.sugiura.jp@gmail.com"
    log 'Copy and pates the SSH key below to GitHub'
    cat ~/.ssh/id_rsa.pub
fi

### asdf Install Script
for plugin in $(awk '{print $1}' ~/.tool-versions); do
    if ! is_dir ~/.asdf/plugins/"$plugin"; then
        asdf plugin add "$plugin"
    fi
done

is_runtime_versions_changed () {
    plugin="$1"
    specified=$(grep "$plugin" ~/.tool-versions | awk '{$1=""; print $0}')
    installed=$(asdf list "$plugin" 2>&1)

    is_changed=
    for version in $specified; do
        match=$(echo "$installed" | grep "$version")
        [ -z "$match" ] && is_changed=1
    done

    [ "$is_changed" ]
}

for plugin in $(asdf plugin list); do
    if is_runtime_versions_changed "$plugin"; then
        if [ "$plugin" = nodejs ]; then
            log "Import release team keyring for Node.JS"
            bash -c '${ASDF_DATA_DIR:=$HOME/.asdf}/plugins/nodejs/bin/import-release-team-keyring'
        fi

        log "Install runtime: $plugin"
        asdf install "$plugin"
    fi
done

if ! is_dir ~/.config/yarn/global/node_modules; then
    log 'Setup Yarn global'
    yarn global add
fi

if ! is_dir /Library/ScriptingAdditions/yabai.osax; then
    log 'Setup yabai'
    sudo yabai --install-sa
fi

if ! is_file ~/prysm/prysm.sh; then
    log 'Setup Ethereum 2.0 client'
    if ! is_dir ~/prysm; then
        mkdir ~/prysm
    fi

    (
        cd ~/prysm
        curl https://raw.githubusercontent.com/prysmaticlabs/prysm/master/prysm.sh --output prysm.sh
        chmod +x prysm.sh
    )
fi

plug_path=~/.local/share/nvim/site/autoload/plug.vim
if ! is_file "$plug_path" ; then
    log 'Setup vim-plug}"'
    sh -c "curl -fLo $plug_path --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
fi
